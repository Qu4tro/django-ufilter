[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "django-ufilter"
version = "0.4.0"
license = "MIT"
include = ["AUTHORS.md", "CHANGELOG.md", "docs"]
description = """
  Django UFilter provides a safe way to filter data via human-friendly URLs.
  A fork from django-url-filter.
"""
authors = ["Miroslav Shubernetskiy <miroslav@miki725.com>"]
maintainers = ["Xavier Francisco <xavier.n.francisco@gmail.com>"]
repository = "https://github.com/Qu4tro/django-ufilter"
keywords = ["django", "django-rest-framework"]
classifiers=[
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 2.7",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.4",
    "Development Status :: 2 - Pre-Alpha",
]
readme = "README.rst"


[tool.poetry.dependencies]
python = ">=3.7,<4.0"
django = [
    {version = "^4", python = "~3.10"},
    {version = "^3.2 || ^4", python = "~3.9"},
    {version = "^3.2 || ^4", python = "~3.8"},
    {version = "^3.2", python = "~3.7"},
]
cached-property = "^1.5.2"
enum-compat = "^0.0.3"
six = "^1.16.0"

[tool.poetry.dev-dependencies]
bpython = "^0.22.1"
pdbpp = "^0.10.3"
isort = "^5.10.1"
black = "^22.3.0"
django-extensions = "^3.1.5"
djangorestframework = "^3.13.1"
pytz = "^2022.1" # Already required by djangorestframework, but not included due to some weird poetry bug
django-debug-toolbar = "^3.4.0"
mock = "^4.0.3"
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
pytest-django = "^4.5.2"
flake8 = "^4.0.1"
flake8-bugbear = "^22.4.25"
flake8-comprehensions = "^3.8.0"
tox = "^3.25.0"
pre-commit = "^2.19.0"
pre-commit-hooks = "^4.2.0"
sphinx = "~4.3.0"
sphinx-autobuild = "^2021.3.14"
sphinx-rtd-theme = "^1.0.0"

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "test_project.settings"
addopts = "-sv --doctest-modules --cov=django_ufilter --cov-report=term-missing:skip-covered"
testpaths = [
    "tests",
    "django_ufilter",
]
